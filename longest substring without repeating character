class Solution {
public:
    int lengthOfLongestSubstring(string s) {
        unordered_map<char, int> charIndex;
        int maxLength = 0, start = 0;

        for (int end = 0; end < s.length(); end++) {
            char currentchar = s[end];

            if (charIndex.find(currentchar) != charIndex.end() && charIndex[currentchar] >= start) {
                start = charIndex[currentchar] + 1;
            }

            charIndex[currentchar] = end;
            maxLength = max(maxLength, end - start + 1);
        }

        return maxLength;
    }
};
